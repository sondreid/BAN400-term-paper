values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2)) %>%
select(!values) %>%
select(., gender, agegroup, year, week, deaths, country)
#### Data UK ----------------------------------------------------------------
library(janitor) ## introducing this in order to make row_names to column_names
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2)) %>%
select(!values, gender, agegroup, year, week, deaths, country)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2)) %>%
select(gender, agegroup, year, week, deaths, country)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2)) %>%
select(gender, agegroup, year, week, deaths, country)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2)) %>%
select(!values)
View(data_denmark)
View(data_denmark)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2),
country = "Denmark") %>%
select(gender, agegroup, year, week, deaths, country )
View(data_denmark)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2),
country = "Denmark") %>%
select(gender, agegroup, year, week, deaths, country) %>%
transform(week = as.numeric(week),
deaths = as.integer(deaths))
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2),
country = "Denmark") %>%
select(gender, agegroup, year, week, deaths, country) %>%
transform(gender = as.character(gender),
agegroup = as.character(agegroup),
year = as.numeric(year),
week = as.numeric(week),
deaths = as.integer(deaths),
country = as.character(country))
View(data_denmark)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2),
country = "Denmark") %>%
select(gender, agegroup, year, week, deaths, country) %>%
transform(agegroup = as.character(agegroup),
year = as.numeric(year),
week = as.numeric(week),
deaths = as.integer(deaths),
country = as.character(country))
#### Data UK ----------------------------------------------------------------
library(janitor) ## introducing this in order to make row_names to column_names
View(data_denmark)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2),
country = "Denmark") %>%
select(gender, agegroup, year, week, deaths, country) %>%
transform(agegroup = as.character(agegroup),
year = as.numeric(year),
week = as.numeric(week),
deaths = as.integer(deaths),
country = as.character(country))
View(data_denmark)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2),
country = "Denmark")
View(data_denmark)
data_denmark <- read_delim("../datasett/danmark_statbank_2013-2020.csv",
delim = ";",
skip = 2)
View(data_denmark)
data_denmark <-
data_denmark[(25:70),-1] %>%
rename(gender = " _1",
agegroup = " _2") %>%
mutate(gender = substr(gender, 1, 1))
changeNonRecurringRow <- function(df, column =? numeric, groupnameInterval =? numeric) {
name <- ""
for (i in 1:nrow(df)) {
if ((((i-1) %% groupnameInterval) == 0) && !is.na(df[i, column]) ){
name <- df[i, column]
} else {
df[i, column] <- name
}
}
return (df)
}
data_denmark  <- changeNonRecurringRow(data_denmark, 1, 23)
data_denmark <-
data_denmark[-c(1,2,24,25),] %>%
pivot_longer(cols = starts_with("20"),
names_to = "values",
values_to = "deaths") %>%
mutate(year = sapply(strsplit(values, "U"),'[', 1),
week = sapply(strsplit(values, "U"), '[', 2),
country = "Denmark") %>%
select(gender, agegroup, year, week, deaths, country) %>%
transform(agegroup = as.character(agegroup),
year = as.numeric(year),
week = as.numeric(week),
deaths = as.integer(deaths),
country = as.character(country))
View(data_denmark)
data_norway <- read_excel("../datasett/norway_ssb.xlsx",
range = "Dode1!a4:X1594")
" Records group-element for a given column and fills empty elements with
the stored element for each new group.
@df, dataframe
@ column, column in dataset, set to be of numeric type
@ groupnameInterval, the frequency in which the groupname occurs, set to be of numeric type"
changeNonRecurringRow <- function(df, column =? numeric, groupnameInterval =? numeric) {
name <- ""
for (i in 1:nrow(df)) {
if ((((i-1) %% groupnameInterval) == 0) && !is.na(df[i, column]) ){
name <- df[i, column]
} else {
df[i, column] <- name
}
}
return (df)
}
data_norway  <- changeNonRecurringRow(data_norway, 1, 53) ## For gender
data_norway  <- changeNonRecurringRow(data_norway, 2, 53) ## For age groups
data_norway  %<>%
pivot_longer(cols = starts_with("20"),
names_to = "year",
values_to = "deaths") %>%
rename(gender = "...1",
agegroup = "...2",
values = "...3") %>%
filter(!gender=="Begge kj?nn") %>%
mutate(week = strsplit(values, " ")[[1]][2]) %>%
select(-values) %>%
mutate(gender = substr(gender, 1, 1))
#### Data UK ----------------------------------------------------------------
library(janitor) ## introducing this in order to make row_names to column_names
data_uk_2014 <- read_xls("../datasett/UK/UK_2014.xls",
sheet = "Weekly Figures 2014",
range = "A2:BA40")
data_uk_2015 <- read_xls("../datasett/UK/UK_2015.xls",
sheet = "Weekly Figures 2015",
range = "A3:BB40")
data_uk_2016 <- read_xls("../datasett/UK/UK_2016.xls",
sheet = "Weekly figures 2016",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE) # To unite two columns without and drop NA.
data_uk_2017 <- read_xls("../datasett/UK/UK_2017.xls",
sheet = "Weekly figures 2017",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE)
data_uk_2018 <- read_xls("../datasett/UK/UK_2018.xls",
sheet = "Weekly figures 2018",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE)
data_uk_2019 <- read_xls("../datasett/UK/UK_2019.xls",
sheet = "Weekly figures 2019",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE)
data_uk_2020 <- read_xlsx("../datasett/UK/UK_2020.xlsx",
sheet = "Weekly figures 2020",
range = "A4:AI85") %>%
unite(., x, 1:2, na.rm = TRUE)
clean_data <- function(df, year =? chr, selectColMale, selectColFemale){
data_uk_male <- as.data.frame(t(df))
data_uk_female <- as.data.frame(t(df))
data_uk_male %<>%
row_to_names(row_number = 1) %>%
select(selectColMale) %>%
mutate("Males 5" = replace_na("M")) %>%
rename(gender = "Males 5",
week = "Week number",
"<1" = "Under 1 year") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk_female %<>%
row_to_names(row_number = 1) %>%
select(selectColFemale) %>%
mutate("Females 5" = replace_na("W")) %>%
rename(gender = "Females 5",
week = "Week number",
"<1" = "Under 1 year") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk <- rbind(data_uk_male, data_uk_female) %>%
mutate(year = rep(year),
country = "United Kingdom") %>%
transform(., week = as.numeric(week),
deaths = as.integer(deaths))
return(data_uk)
}
custom_clean_data_2020 <- function(df, year =? chr, selectColMale, selectColFemale){
data_uk_male <- as.data.frame(t(df))
data_uk_female <- as.data.frame(t(df))
data_uk_male %<>%
row_to_names(row_number = 1) %>%
select(selectColMale) %>%
mutate("Males 6" = replace_na("M")) %>%
rename(gender = "Males 6",
week = "Week number") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk_female %<>%
row_to_names(row_number = 1) %>%
select(selectColFemale) %>%
mutate("Females 6" = replace_na("W")) %>%
rename(gender = "Females 6",
week = "Week number") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk <- rbind(data_uk_male, data_uk_female) %>%
mutate(year = rep(year),
country = "United Kingdom") %>%
transform(., week = as.numeric(week),
deaths = as.integer(deaths))
return(data_uk)
}
data_uk_2014 <- clean_data(data_uk_2014, 2014,
selectColMale = c(1, 21, 23:29),
selectColFemale =  c(1, 30, 32:38))
data_uk_2015 <- clean_data(data_uk_2015, 2015,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2016 <- clean_data(data_uk_2016, 2016,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2017 <- clean_data(data_uk_2017, 2017,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2018 <- clean_data(data_uk_2018, 2018,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2019 <- clean_data(data_uk_2019, 2019,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2020 <- custom_clean_data_2020(data_uk_2020, 2020,
selectColMale = c(1, 38, 40:59),
selectColFemale =  c(1, 60, 62:81))
# Binding all data frames created except from 2020
data_uk <- do.call("rbind", list(data_uk_2014, data_uk_2015, data_uk_2016, data_uk_2017, data_uk_2018, data_uk_2019, data_uk_2020))
# Removes unwanted df
rm(data_uk_2014)
rm(data_uk_2015)
rm(data_uk_2016)
rm(data_uk_2017)
rm(data_uk_2018)
rm(data_uk_2019)
rm(data_uk_2020)
#### Data UK ----------------------------------------------------------------
library(janitor) ## introducing this in order to make row_names to column_names
data_uk_2014 <- read_xls("../datasett/UK/UK_2014.xls",
sheet = "Weekly Figures 2014",
range = "A2:BA40")
data_uk_2015 <- read_xls("../datasett/UK/UK_2015.xls",
sheet = "Weekly Figures 2015",
range = "A3:BB40")
data_uk_2016 <- read_xls("../datasett/UK/UK_2016.xls",
sheet = "Weekly figures 2016",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE) # To unite two columns without and drop NA.
data_uk_2017 <- read_xls("../datasett/UK/UK_2017.xls",
sheet = "Weekly figures 2017",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE)
data_uk_2018 <- read_xls("../datasett/UK/UK_2018.xls",
sheet = "Weekly figures 2018",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE)
data_uk_2019 <- read_xls("../datasett/UK/UK_2019.xls",
sheet = "Weekly figures 2019",
range = "A3:BB40") %>%
unite(., x, 1:2, na.rm = TRUE)
data_uk_2020 <- read_xlsx("../datasett/UK/UK_2020.xlsx",
sheet = "Weekly figures 2020",
range = "A4:AI85") %>%
unite(., x, 1:2, na.rm = TRUE)
clean_data <- function(df, year =? chr, selectColMale, selectColFemale){
data_uk_male <- as.data.frame(t(df))
data_uk_female <- as.data.frame(t(df))
data_uk_male %<>%
row_to_names(row_number = 1) %>%
select(selectColMale) %>%
mutate("Males 5" = replace_na("M")) %>%
rename(gender = "Males 5",
week = "Week number",
"<1" = "Under 1 year") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk_female %<>%
row_to_names(row_number = 1) %>%
select(selectColFemale) %>%
mutate("Females 5" = replace_na("W")) %>%
rename(gender = "Females 5",
week = "Week number",
"<1" = "Under 1 year") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk <- rbind(data_uk_male, data_uk_female) %>%
mutate(year = rep(year),
country = "United Kingdom") %>%
transform(., week = as.numeric(week),
deaths = as.integer(deaths))
return(data_uk)
}
custom_clean_data_2020 <- function(df, year =? chr, selectColMale, selectColFemale){
data_uk_male <- as.data.frame(t(df))
data_uk_female <- as.data.frame(t(df))
data_uk_male %<>%
row_to_names(row_number = 1) %>%
select(selectColMale) %>%
mutate("Males 6" = replace_na("M")) %>%
rename(gender = "Males 6",
week = "Week number") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk_female %<>%
row_to_names(row_number = 1) %>%
select(selectColFemale) %>%
mutate("Females 6" = replace_na("W")) %>%
rename(gender = "Females 6",
week = "Week number") %>%
pivot_longer(cols = !c(week, gender),
names_to = "agegroup",
values_to = "deaths")
data_uk <- rbind(data_uk_male, data_uk_female) %>%
mutate(year = rep(year),
country = "United Kingdom") %>%
transform(., week = as.numeric(week),
deaths = as.integer(deaths))
return(data_uk)
}
data_uk_2014 <- clean_data(data_uk_2014, 2014,
selectColMale = c(1, 21, 23:29),
selectColFemale =  c(1, 30, 32:38))
data_uk_2015 <- clean_data(data_uk_2015, 2015,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2016 <- clean_data(data_uk_2016, 2016,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2017 <- clean_data(data_uk_2017, 2017,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2018 <- clean_data(data_uk_2018, 2018,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2019 <- clean_data(data_uk_2019, 2019,
selectColMale = c(1, 20, 22:28),
selectColFemale =  c(1, 29, 31:37))
data_uk_2020 <- custom_clean_data_2020(data_uk_2020, 2020,
selectColMale = c(1, 38, 40:59),
selectColFemale =  c(1, 60, 62:81))
# Binding all data frames created except from 2020
data_uk <- do.call("rbind", list(data_uk_2014, data_uk_2015, data_uk_2016, data_uk_2017, data_uk_2018, data_uk_2019, data_uk_2020)) %>%
select(gender, agegroup, year, week , deaths, country)
# Removes unwanted df
rm(data_uk_2014)
rm(data_uk_2015)
rm(data_uk_2016)
rm(data_uk_2017)
rm(data_uk_2018)
rm(data_uk_2019)
rm(data_uk_2020)
?library(tidyverse)
